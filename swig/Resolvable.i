/*
 * Resolvable.i
 *
 * Base class for dependency solving operations
 *
 * Document-class: Resolvable
 * Any object taking part in dependency solving operations is a
 * derivative of Resolvable.
 *
 * Resolvables cannot be created, they are generated by filling the
 * Pool.
 *
 * === Usage
 *
%ignore zypp::make;
%import <zypp/sat/Solvable.h>
%include <zypp/Resolvable.h>
 */

%nodefault zypp::Resolvable;
namespace zypp {
class Resolvable {
};
};

%extend zypp::Resolvable
{
  /* no con/de structor */
  
  /*
   * name of package/patch/pattern
   */
  const char *name()
  { return $self->name().c_str(); }
  
  /*
   * architecture of package/patch/pattern
   */
  zypp::Arch arch()
  { return $self->arch();  }
  
  /*
   * coming from system (is installed)
   */
#if defined(SWIGRUBY)
%rename("system?") is_system;
%alias is_system "installed?";
#endif
  bool is_system()
  { return $self->isSystem(); }

}
